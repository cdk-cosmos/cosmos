// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CICD-Solar-System Extension should match snapshot 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "CdkPipeline": Object {
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Type": "S3",
        },
        "Name": "App-Test-Cdk-Pipeline",
        "RoleArn": "arn:aws:iam::account:role/CoreCdkMasterRole",
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "AppTestCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                  },
                },
                "Name": "CdkCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineSourceCdkCheckoutCodePipelineActionRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"AppTest*\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDeploy",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkDeployOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineDeployCdkDeployCodePipelineActionRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Test",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CdkPipelineCdkArtifactBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "LogFilePrefix": "BucketAccessLogs/",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Test",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkPipelineCdkArtifactBucketPolicy": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CdkPipelineCdkArtifactBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CdkPipelineCdkArtifactBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceSSLOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CdkPipelineDeploy": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Name": "cdk.templates",
          "NamespaceType": "BUILD_ID",
          "Packaging": "ZIP",
          "Path": "CodeBuild",
          "Type": "S3",
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "NPM_KEY",
              "Type": "PLAINTEXT",
              "Value": "",
            },
            Object {
              "Name": "STACKS",
              "Type": "PLAINTEXT",
              "Value": "",
            },
          ],
          "Image": "aws/codebuild/standard:3.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "App-Test-Cdk-Deploy",
        "ServiceRole": "arn:aws:iam::account:role/CoreCdkMasterRole",
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"12\\"
      }
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"echo \\\\\\"//registry.npmjs.org/:_authToken=\${NPM_KEY}\\\\\\" >> ~/.npmrc\\",
        \\"npm ci\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx cdk synth \${STACKS}\\",
        \\"npx cdk deploy --require-approval=never \${STACKS}\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": [
      \\"*.template.json\\"
    ]
  }
}",
          "Location": Object {
            "Fn::ImportValue": "AppTestCosmos:ExportsOutputFnGetAttCdkRepoCloneUrlHttp816DF6FA",
          },
          "Type": "CODECOMMIT",
        },
        "SourceVersion": "master",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Test",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CdkPipelineDeployCdkDeployCodePipelineActionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::account:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Test",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkPipelineDeployCdkDeployCodePipelineActionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkPipelineDeploy",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkPipelineDeployCdkDeployCodePipelineActionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CdkPipelineDeployCdkDeployCodePipelineActionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkPipelineSourceCdkCheckoutCodePipelineActionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::account:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Test",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkPipelineSourceCdkCheckoutCodePipelineActionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineCdkArtifactBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CdkPipelineCdkArtifactBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "AppTestCosmos:ExportsOutputFnGetAttCdkRepoArn941DDF84",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkPipelineSourceCdkCheckoutCodePipelineActionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CdkPipelineSourceCdkCheckoutCodePipelineActionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;

exports[`CICD-Solar-System should match snapshot 1`] = `
Object {
  "Description": "Cosmos SolarSystem: Resources dependant on each App Env, like Vpc and MainZone.",
  "Outputs": Object {
    "PrivateZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreGalCiCdPrivateZoneId",
      },
      "Value": Object {
        "Ref": "PrivateZone",
      },
    },
    "PrivateZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreGalCiCdPrivateZoneName",
      },
      "Value": "cicd.internal",
    },
    "VpcAZs": Object {
      "Export": Object {
        "Name": "CoreGalCiCdVpcAZs",
      },
      "Value": "dummy1a,dummy1b",
    },
    "VpcId": Object {
      "Export": Object {
        "Name": "CoreGalCiCdVpcId",
      },
      "Value": Object {
        "Ref": "Vpc",
      },
    },
    "VpcIsolatedSubnetRouteTables": Object {
      "Export": Object {
        "Name": "CoreGalCiCdVpcIsolatedSubnetRouteTableIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1RouteTable",
            },
            Object {
              "Ref": "VpcAppSubnet2RouteTable",
            },
          ],
        ],
      },
    },
    "VpcIsolatedSubnets": Object {
      "Export": Object {
        "Name": "CoreGalCiCdVpcIsolatedSubnetIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1Subnet",
            },
            Object {
              "Ref": "VpcAppSubnet2Subnet",
            },
          ],
        ],
      },
    },
    "ZoneId": Object {
      "Export": Object {
        "Name": "CoreGalCiCdZoneId",
      },
      "Value": Object {
        "Ref": "Zone",
      },
    },
    "ZoneName": Object {
      "Export": Object {
        "Name": "CoreGalCiCdZoneName",
      },
      "Value": "cicd.cos.com",
    },
    "ZoneNameServers": Object {
      "Export": Object {
        "Name": "CoreGalCiCdZoneNameServers",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Object {
            "Fn::GetAtt": Array [
              "Zone",
              "NameServers",
            ],
          },
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693ArtifactHash": Object {
      "Description": "Artifact hash for asset \\"e16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693\\"",
      "Type": "String",
    },
    "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693S3Bucket": Object {
      "Description": "S3 bucket for asset \\"e16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693\\"",
      "Type": "String",
    },
    "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693S3VersionKey": Object {
      "Description": "S3 key for asset version \\"e16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "CiCd": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.region.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693S3Bucket",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693S3VersionKey",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse16225f77ecbeacb79ef92b23cdbd740017ffade41b2816ec0bc0f161baea693S3VersionKey",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "PrivateZone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Private Zone for CiCd SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "Name": "cicd.internal.",
        "VPCs": Array [
          Object {
            "VPCId": Object {
              "Ref": "Vpc",
            },
            "VPCRegion": "region",
          },
        ],
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "Vpc": Object {
      "Properties": Object {
        "CidrBlock": "10.0.4.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcAppSubnet1RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet1RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet1RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet1Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet1Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.4.0/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcAppSubnet2RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet2RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet2RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet2Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet2Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.4.64/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcCloudWatchLogsEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcCloudWatchLogsEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcCloudWatchLogsEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/CiCd/Vpc/CloudWatchLogsEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcS3Gateway": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcAppSubnet1RouteTable",
          },
          Object {
            "Ref": "VpcAppSubnet2RouteTable",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/CiCd/Vpc/SsmEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessageEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessageEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessageEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/CiCd/Vpc/SsmMessageEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/CiCd/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Zone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Zone for CiCd SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
        "Name": "cicd.cos.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "ZoneDelegation": Object {
      "Properties": Object {
        "Comment": "Core Zone Delegation for CiCd SolarSystem.",
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreCosCosmos:ExportsOutputRefRootZone2F3E9CEF",
        },
        "Name": "cicd.cos.com.",
        "ResourceRecords": Object {
          "Fn::GetAtt": Array [
            "Zone",
            "NameServers",
          ],
        },
        "TTL": "1800",
        "Type": "NS",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`CICD-Solar-System should match snapshot 2`] = `
Object {
  "Resources": Object {
    "CdkPipeline": Object {
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Type": "S3",
        },
        "Name": "Core-Cos-Cdk-Pipeline",
        "RoleArn": "arn:aws:iam::account:role/CoreCdkMasterRole",
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "CoreCosCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                  },
                },
                "Name": "CdkCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineSourceCdkCheckoutCodePipelineActionRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"CoreCos*\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDeploy",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkDeployOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineDeployCdkDeployCodePipelineActionRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CdkPipelineCdkArtifactBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "LogFilePrefix": "BucketAccessLogs/",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkPipelineCdkArtifactBucketPolicy": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CdkPipelineCdkArtifactBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CdkPipelineCdkArtifactBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceSSLOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CdkPipelineDeploy": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Name": "cdk.templates",
          "NamespaceType": "BUILD_ID",
          "Packaging": "ZIP",
          "Path": "CodeBuild",
          "Type": "S3",
        },
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "NPM_KEY",
              "Type": "PLAINTEXT",
              "Value": "",
            },
            Object {
              "Name": "STACKS",
              "Type": "PLAINTEXT",
              "Value": "",
            },
          ],
          "Image": "aws/codebuild/standard:3.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "Core-Cos-Cdk-Deploy",
        "ServiceRole": "arn:aws:iam::account:role/CoreCdkMasterRole",
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"12\\"
      }
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"echo \\\\\\"//registry.npmjs.org/:_authToken=\${NPM_KEY}\\\\\\" >> ~/.npmrc\\",
        \\"npm ci\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"npx cdk synth \${STACKS}\\",
        \\"npx cdk deploy --require-approval=never \${STACKS}\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": [
      \\"*.template.json\\"
    ]
  }
}",
          "Location": Object {
            "Fn::ImportValue": "CoreCosCosmos:ExportsOutputFnGetAttCdkRepoCloneUrlHttp816DF6FA",
          },
          "Type": "CODECOMMIT",
        },
        "SourceVersion": "master",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CdkPipelineDeployCdkDeployCodePipelineActionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::account:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkPipelineDeployCdkDeployCodePipelineActionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkPipelineDeploy",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkPipelineDeployCdkDeployCodePipelineActionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CdkPipelineDeployCdkDeployCodePipelineActionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CdkPipelineSourceCdkCheckoutCodePipelineActionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::account:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CdkPipelineSourceCdkCheckoutCodePipelineActionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CdkPipelineCdkArtifactBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CdkPipelineCdkArtifactBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "CoreCosCosmos:ExportsOutputFnGetAttCdkRepoArn941DDF84",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CdkPipelineSourceCdkCheckoutCodePipelineActionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CdkPipelineSourceCdkCheckoutCodePipelineActionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
