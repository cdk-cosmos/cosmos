// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Solar-System should match snapshot 1`] = `
Object {
  "Description": "Cosmos Galaxy: Resources dependant on each Aws Account, like ShareVpc and CrossAccountRoles.",
  "Outputs": Object {
    "ExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1RouteTable688214BDRef": Object {
      "Export": Object {
        "Name": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1RouteTable688214BDRef53808134",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SharedVpcNestedStackSharedVpcNestedStackResource",
          "Outputs.CosGalSharedVpcAppSubnet1RouteTable688214BDRef",
        ],
      },
    },
    "ExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1Subnet4ACE937ERef": Object {
      "Export": Object {
        "Name": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1Subnet4ACE937ERef5B584747",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SharedVpcNestedStackSharedVpcNestedStackResource",
          "Outputs.CosGalSharedVpcAppSubnet1Subnet4ACE937ERef",
        ],
      },
    },
    "ExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2RouteTable4054ECB4Ref": Object {
      "Export": Object {
        "Name": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2RouteTable4054ECB4RefD3834381",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SharedVpcNestedStackSharedVpcNestedStackResource",
          "Outputs.CosGalSharedVpcAppSubnet2RouteTable4054ECB4Ref",
        ],
      },
    },
    "ExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2Subnet0D4DDC84Ref": Object {
      "Export": Object {
        "Name": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2Subnet0D4DDC84RefB336091C",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SharedVpcNestedStackSharedVpcNestedStackResource",
          "Outputs.CosGalSharedVpcAppSubnet2Subnet0D4DDC84Ref",
        ],
      },
    },
    "ExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcEA1B9578Ref": Object {
      "Export": Object {
        "Name": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcEA1B9578Ref0C619D92",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SharedVpcNestedStackSharedVpcNestedStackResource",
          "Outputs.CosGalSharedVpcEA1B9578Ref",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebArtifactHash": Object {
      "Description": "Artifact hash for asset \\"ccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98eb\\"",
      "Type": "String",
    },
    "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebS3Bucket": Object {
      "Description": "S3 bucket for asset \\"ccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98eb\\"",
      "Type": "String",
    },
    "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebS3VersionKey": Object {
      "Description": "S3 key for asset version \\"ccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98eb\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "SharedVpcNestedStackSharedVpcNestedStackResource": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
        ],
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.region.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebS3Bucket",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebS3VersionKey",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersccb488fd13037e95a495bd6175bc8c2fa97c443458e9721d554b579b5dbc98ebS3VersionKey",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
  },
}
`;

exports[`Solar-System should match snapshot 2`] = `
Object {
  "Outputs": Object {
    "CosGalSharedVpcAppSubnet1RouteTable688214BDRef": Object {
      "Value": Object {
        "Ref": "VpcAppSubnet1RouteTable",
      },
    },
    "CosGalSharedVpcAppSubnet1Subnet4ACE937ERef": Object {
      "Value": Object {
        "Ref": "VpcAppSubnet1Subnet",
      },
    },
    "CosGalSharedVpcAppSubnet2RouteTable4054ECB4Ref": Object {
      "Value": Object {
        "Ref": "VpcAppSubnet2RouteTable",
      },
    },
    "CosGalSharedVpcAppSubnet2Subnet0D4DDC84Ref": Object {
      "Value": Object {
        "Ref": "VpcAppSubnet2Subnet",
      },
    },
    "CosGalSharedVpcEA1B9578Ref": Object {
      "Value": Object {
        "Ref": "Vpc",
      },
    },
  },
  "Resources": Object {
    "Vpc": Object {
      "Properties": Object {
        "CidrBlock": "10.0.4.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcAppSubnet1RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet1RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet1RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet1Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet1Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.4.0/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcAppSubnet2RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet2RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet2RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet2Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet2Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.4.64/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcCloudWatchLogsEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcCloudWatchLogsEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcCloudWatchLogsEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/SharedVpc/Vpc/CloudWatchLogsEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcS3Gateway": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcAppSubnet1RouteTable",
          },
          Object {
            "Ref": "VpcAppSubnet2RouteTable",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/SharedVpc/Vpc/SsmEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessageEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessageEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessageEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal/SharedVpc/Vpc/SsmMessageEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "SharedVpc",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal/SharedVpc/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;

exports[`Solar-System should match snapshot 3`] = `
Object {
  "Description": "Cosmos Galaxy: Resources dependant on each Aws Account, like ShareVpc and CrossAccountRoles.",
  "Resources": Object {
    "CdkCrossAccountRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "arn:aws:iam::account:role/CoreCdkMasterRole",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
        "RoleName": "CoreCdkCrossAccountRole",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;

exports[`Solar-System should match snapshot 4`] = `
Object {
  "Description": "Cosmos SolarSystem: Resources dependant on each App Env, like Vpc and MainZone.",
  "Outputs": Object {
    "PrivateZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreGalSysPrivateZoneId",
      },
      "Value": Object {
        "Ref": "PrivateZone",
      },
    },
    "PrivateZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreGalSysPrivateZoneName",
      },
      "Value": "sys.internal",
    },
    "VpcAZs": Object {
      "Export": Object {
        "Name": "CoreGalSysVpcAZs",
      },
      "Value": "dummy1a,dummy1b",
    },
    "VpcId": Object {
      "Export": Object {
        "Name": "CoreGalSysVpcId",
      },
      "Value": Object {
        "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcEA1B9578Ref0C619D92",
      },
    },
    "VpcIsolatedSubnetRouteTables": Object {
      "Export": Object {
        "Name": "CoreGalSysVpcIsolatedSubnetRouteTableIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1RouteTable688214BDRef53808134",
            },
            Object {
              "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2RouteTable4054ECB4RefD3834381",
            },
          ],
        ],
      },
    },
    "VpcIsolatedSubnets": Object {
      "Export": Object {
        "Name": "CoreGalSysVpcIsolatedSubnetIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet1Subnet4ACE937ERef5B584747",
            },
            Object {
              "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcAppSubnet2Subnet0D4DDC84RefB336091C",
            },
          ],
        ],
      },
    },
    "ZoneNameServers": Object {
      "Export": Object {
        "Name": "CoreGalSysZoneNameServers",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Object {
            "Fn::GetAtt": Array [
              "Zone",
              "NameServers",
            ],
          },
        ],
      },
    },
    "ZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreGalSysZoneId",
      },
      "Value": Object {
        "Ref": "Zone",
      },
    },
    "ZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreGalSysZoneName",
      },
      "Value": "sys.cos.com",
    },
  },
  "Resources": Object {
    "PrivateZone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Private Zone for Sys SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys",
          },
        ],
        "Name": "sys.internal.",
        "VPCs": Array [
          Object {
            "VPCId": Object {
              "Fn::ImportValue": "CoreCosGalGalaxy:GalExportsOutputFnGetAttSharedVpcNestedStackSharedVpcNestedStackResourceOutputsCosGalSharedVpcEA1B9578Ref0C619D92",
            },
            "VPCRegion": "region",
          },
        ],
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "Zone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Zone for Sys SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys",
          },
        ],
        "Name": "sys.cos.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "ZoneDelegation": Object {
      "Properties": Object {
        "Comment": "Core Zone Delegation for Sys SolarSystem.",
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreCosCosmos:ExportsOutputRefRootZone2F3E9CEF",
        },
        "Name": "sys.cos.com.",
        "ResourceRecords": Object {
          "Fn::GetAtt": Array [
            "Zone",
            "NameServers",
          ],
        },
        "TTL": "1800",
        "Type": "NS",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`Solar-System should match snapshot 5`] = `
Object {
  "Description": "Cosmos SolarSystem: Resources dependant on each App Env, like Vpc and MainZone.",
  "Outputs": Object {
    "PrivateZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2PrivateZoneId",
      },
      "Value": Object {
        "Ref": "PrivateZone",
      },
    },
    "PrivateZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2PrivateZoneName",
      },
      "Value": "sys2.internal",
    },
    "VpcAZs": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2VpcAZs",
      },
      "Value": "dummy1a,dummy1b",
    },
    "VpcId": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2VpcId",
      },
      "Value": Object {
        "Ref": "Vpc",
      },
    },
    "VpcIsolatedSubnetRouteTables": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2VpcIsolatedSubnetRouteTableIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1RouteTable",
            },
            Object {
              "Ref": "VpcAppSubnet2RouteTable",
            },
          ],
        ],
      },
    },
    "VpcIsolatedSubnets": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2VpcIsolatedSubnetIds",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Array [
            Object {
              "Ref": "VpcAppSubnet1Subnet",
            },
            Object {
              "Ref": "VpcAppSubnet2Subnet",
            },
          ],
        ],
      },
    },
    "ZoneNameServers": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2ZoneNameServers",
      },
      "Value": Object {
        "Fn::Join": Array [
          ",",
          Object {
            "Fn::GetAtt": Array [
              "Zone",
              "NameServers",
            ],
          },
        ],
      },
    },
    "ZoneZoneId": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2ZoneId",
      },
      "Value": Object {
        "Ref": "Zone",
      },
    },
    "ZoneZoneName": Object {
      "Export": Object {
        "Name": "CoreGal2Sys2ZoneName",
      },
      "Value": "sys2.cos.com",
    },
  },
  "Resources": Object {
    "PrivateZone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Private Zone for Sys2 SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
        ],
        "Name": "sys2.internal.",
        "VPCs": Array [
          Object {
            "VPCId": Object {
              "Ref": "Vpc",
            },
            "VPCRegion": "region2",
          },
        ],
      },
      "Type": "AWS::Route53::HostedZone",
    },
    "Vpc": Object {
      "Properties": Object {
        "CidrBlock": "10.0.5.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcAppSubnet1RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet1RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet1RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet1Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet1Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.5.0/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc/AppSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcAppSubnet2RouteTable": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcAppSubnet2RouteTableAssociation": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcAppSubnet2RouteTable",
        },
        "SubnetId": Object {
          "Ref": "VpcAppSubnet2Subnet",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcAppSubnet2Subnet": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.5.64/26",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "App",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc/AppSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcCloudWatchLogsEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcCloudWatchLogsEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region2.logs",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcCloudWatchLogsEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal2/Sys2/Vpc/CloudWatchLogsEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcS3Gateway": Object {
      "Properties": Object {
        "RouteTableIds": Array [
          Object {
            "Ref": "VpcAppSubnet1RouteTable",
          },
          Object {
            "Ref": "VpcAppSubnet2RouteTable",
          },
        ],
        "ServiceName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "com.amazonaws.",
              Object {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region2.ssm",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal2/Sys2/Vpc/SsmEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcSsmMessageEndpoint": Object {
      "Properties": Object {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "VpcSsmMessageEndpointSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "ServiceName": "com.amazonaws.region2.ssmmessages",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcAppSubnet1Subnet",
          },
          Object {
            "Ref": "VpcAppSubnet2Subnet",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcSsmMessageEndpointSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Cos/Gal2/Sys2/Vpc/SsmMessageEndpoint/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "Vpc",
                "CidrBlock",
              ],
            },
            "Description": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "from ",
                  Object {
                    "Fn::GetAtt": Array [
                      "Vpc",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
          Object {
            "Key": "Name",
            "Value": "Cos/Gal2/Sys2/Vpc",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Zone": Object {
      "Properties": Object {
        "HostedZoneConfig": Object {
          "Comment": "Core Main Zone for Sys2 SolarSystem",
        },
        "HostedZoneTags": Array [
          Object {
            "Key": "cosmos",
            "Value": "Cos",
          },
          Object {
            "Key": "cosmos:galaxy",
            "Value": "Gal2",
          },
          Object {
            "Key": "cosmos:solarsystem",
            "Value": "Sys2",
          },
        ],
        "Name": "sys2.cos.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
  },
}
`;

exports[`Solar-System should match snapshot 6`] = `
Object {
  "Description": "Cosmos Link: Resources to link the Cosmos, like Route53 zone delegation",
  "Resources": Object {
    "Sys2ZoneDelegation": Object {
      "Properties": Object {
        "Comment": "Core Zone Delegation for Sys2 SolarSystem.",
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreCosCosmos:ExportsOutputRefRootZone2F3E9CEF",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::GetAtt": Array [
                  "Sys2ZoneDelegationExports",
                  "CoreGal2Sys2ZoneName",
                ],
              },
              ".",
            ],
          ],
        },
        "ResourceRecords": Object {
          "Fn::Split": Array [
            ",",
            Object {
              "Fn::GetAtt": Array [
                "Sys2ZoneDelegationExports",
                "CoreGal2Sys2ZoneNameServers",
              ],
            },
          ],
        },
        "TTL": "1800",
        "Type": "NS",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "Sys2ZoneDelegationExports": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::ImportValue": "CoreCosCosmos:ExportsOutputFnGetAttCustomCrossAccountExportsCustomResourceProviderHandlerArn8CE3D38E",
        },
        "assumeRoleArn": "arn:aws:iam::account2:role/CoreCdkCrossAccountRole",
        "exports": Array [
          "CoreGal2Sys2ZoneName",
          "CoreGal2Sys2ZoneNameServers",
        ],
      },
      "Type": "Custom::CrossAccountExports",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;

exports[`SolarSystem Extension should allow resourced to be created in portal 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "ZoneTest": Object {
      "Properties": Object {
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreGalSysZoneId",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "test.",
              Object {
                "Fn::ImportValue": "CoreGalSysZoneName",
              },
              ".",
            ],
          ],
        },
        "ResourceRecords": Array [
          "test",
        ],
        "TTL": "1800",
        "Type": "CNAME",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`SolarSystem Extension should be able to target the same SolarSystem from multiple Stacks 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "Test": Object {
      "Properties": Object {
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreTestTestZoneId",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::ImportValue": "CoreTestTestZoneName",
              },
              ".",
            ],
          ],
        },
        "ResourceRecords": Array [
          "1.1.1.1",
        ],
        "TTL": "1800",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`SolarSystem Extension should be able to target the same SolarSystem from multiple Stacks 2`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "Test": Object {
      "Properties": Object {
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreTestTestZoneId",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::ImportValue": "CoreTestTestZoneName",
              },
              ".",
            ],
          ],
        },
        "ResourceRecords": Array [
          "1.1.1.1",
        ],
        "TTL": "1800",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`SolarSystem Extension should match snapshot 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "test": Object {
      "Properties": Object {
        "HostedZoneId": Object {
          "Fn::ImportValue": "CoreGalSysZoneId",
        },
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Fn::ImportValue": "CoreGalSysZoneName",
              },
              ".",
            ],
          ],
        },
        "ResourceRecords": Array [
          "1.1.1.1",
        ],
        "TTL": "1800",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
  },
}
`;

exports[`SolarSystem Extension should restore multiple subnet groups and create route 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "TestRoute": Object {
      "Properties": Object {
        "DestinationCidrBlock": "10.0.0.0/16",
        "RouteTableId": Object {
          "Fn::Select": Array [
            2,
            Object {
              "Fn::Split": Array [
                ",",
                Object {
                  "Fn::ImportValue": "CoreTestTestVpcIsolatedSubnetRouteTableIds",
                },
              ],
            },
          ],
        },
      },
      "Type": "AWS::EC2::Route",
    },
  },
}
`;
